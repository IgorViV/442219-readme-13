<?php
require_once('functions.php');
require_once('constants.php');
require_once('config.php');
require_once('connect.php');
require_once('models.php');
require_once('validations.php');

is_not_session();

$current_user = get_user_by_id($link, $_SESSION['user_id']);
$link_ref = $_SERVER['HTTP_REFERER'];

$layout_header = include_template('main-header.php', [
    'current_user' => $current_user,
]);

$user_id = filter_input(INPUT_GET, 'user_id');
if (!$user_id) {
    show_error($layout_header, 'Запрошенная страница не найдена на сервере: ' . '404', 'readme: профиль пользователя');
}

$user_profile = get_profile_user_by_index($link, $user_id);
if (!$user_profile) {
    show_error($layout_header, 'Запрошенная страница не найдена на сервере: ' . '404', 'readme: профиль пользователя');
}

$is_show_comments = false; // не показывать комментарии к посту
$is_not_you = $user_profile['id'] !== $current_user['id']; // это не вы сами :)))

// посты по ID пользователя
$user_posts = get_posts_by_user($link, $user_id);

// количество подписчиков
$user_subscribe = get_subscribers_by_user($link, $user_id)['count_sub'];

// количество публикаций
$user_publications = get_posting_by_user($link, $user_id)['count_posts'];

$is_subscribe = !empty(get_id_subscriber_by_user($link, $user_profile['id'], $current_user['id']));

$layout_content = include_template('profile-main.php', [
    'user_profile' => $user_profile,
    'user_posts' => $user_posts,
    'user_subscribe' => $user_subscribe,
    'user_publications' => $user_publications,
    'current_user' => $current_user,
    'is_subscribe' => $is_subscribe,
    'is_not_you' => $is_not_you,
    'is_show_comments' => $is_show_comments,
]);

show_layout($layout_header, $layout_content, 'readme: профиль пользователя');

// 3.5. Подписка на пользователя
// Выполняется со страницы профиля пользователя.
// Последовательность действий:
// -+ Из параметра запроса нужно извлечь ID пользователя, на которого выполняется подписка.
// -+ По полученному ID убедиться, что в таблице пользователей существует такая запись.
// -+ Добавить в таблицу подписок пользователей соответствующую связь (смотрите раздел «Сущности»).
// - Отправить этому пользователю уведомление о новом подписчике (смотрите описание процесса «Отправка уведомлений»).
// - Выполнить переадресацию обратно на профиль пользователя.

// 3.6. Отписка от пользователя
// Выполняется со страницы профиля пользователя.
// Последовательность действий:
// -+ Из параметра запроса надо извлечь ID пользователя, по которому выполняется отписка.
// -+ По полученному ID убедиться, что в таблице подписок пользователей есть соответствующая связь (смотри раздел «Сущности»).
// -+ Удалить запись с этой связью.
// -+ Выполнить переадресацию обратно на профиль пользователя.

// 3.7. Лайк публикации
// Выполняется с любой страницы, где есть блоки для показа публикаций.
// Последовательность действий:
// - Из параметра запроса нужно извлечь ID поста;
// - По этому ID убедиться, что в таблице с постами есть такой пост;
// - Если такой пост существует, то добавить новую связь «Пользователь-лайки» через соответствующую таблицу (смотри раздел «Сущности»);
// - Выполнить переадресацию обратно на предыдущую страницу (использовать заголовок запроса Referer для получения адреса этой страницы).

// 3.11. Добавление комментария
// Выполняется после заполнения формы комментария на странице просмотра поста.
// Последовательность действий:
// - Проверить, что отправлена форма;
// - Убедиться, что заполнены все её поля;
// - Выполнить все проверки;
// - Если нет ошибок валидации, то сохранить новое сообщение в таблице комментариев;
// - Показать ошибку валидации формы, если таковая была.
// - При успешном сохранении формы переадресовывать пользователя на страницу профиля пользователя — автора публикации, к которой добавлялся комментарий.
// Список проверок
// - Проверка существования поста
// - ID поста, к которому добавляется комментарий, находится в специальном скрытом поле формы. Следует проверить, что пост с этим ID существует в таблице постов.
// - Проверка текста сообщения
// - Поле должно быть заполнено. Очистить содержимое от начальных и конечных пробелов встроенной функцией trim. Длина итогового комментария не должна быть меньше четырех символов.
